{% extends "base.htm" %}


{% block content %}

<script src="https://cdn.plot.ly/plotly-2.8.3.min.js"></script>
<script src="static/scripts/plotly_render.js"></script>

<script>
  
  function clearPOItable() {
      var table = document.getElementById("list_of_pois");
      var rowarr = Array.prototype.slice.call(table.rows,1);
      for(row of rowarr)
	  row.remove();
  };  

  function fillPOItable(jsondata) {
      var table = document.getElementById("list_of_pois");
      var myuserid = document.getElementById("current_user_id").innerHTML;
      for(item of jsondata["data"])
      {
	  
	  var row = table.insertRow(-1);
	  row.className = "poi_row";
	  var namecell = row.insertCell(-1);
	  namecell.innerHTML = item["attributes"]["name"];

	  var xcell = row.insertCell(-1);
	  xcell.innerHTML = item["attributes"]["coords"][0];

	  var ycell = row.insertCell(-1);
	  ycell.innerHTML = item["attributes"]["coords"][1];

	  var zcell = row.insertCell(-1);
	  zcell.innerHTML = item["attributes"]["coords"][2];

	  //TODO: do this lookup on client side, probably
	  var typecell = row.insertCell(-1);
	  typecell.innerHTML = item["attributes"]["typename"];

	  var stylecell = row.insertCell(-1);
	  var stylename = lookupRelationship(item, jsondata, "style", "name");
	  stylecell.innerHTML = stylename;

	  const stylepreview = row.insertCell(-1);
	  const stylepreviewdiv = document.createElement("div");
	  stylepreviewdiv.setAttribute("class", "stylepreview");
	  stylepreviewdiv.setAttribute("id",
				       item["relationships"]["style"]["data"]["id"]);
	  stylepreview.appendChild(stylepreviewdiv);
	  
	  var usercell = row.insertCell(-1);
	  var userdisplay = lookupUserDisplayName(item, jsondata);
	  
	  usercell.innerHTML = userdisplay;

	  var datecell = row.insertCell(-1);
	  var createdat = new Date(item["attributes"]["create_date"].trim());
	  datecell.innerHTML = createdat.toLocaleString();

	  if(Number(item["relationships"]["user"]["data"]["id"]) == Number(myuserid))
	  {
	      var deletecell = row.insertCell(-1);
	      var poiid = item["id"]
	      var deletelink ='<a href="/poi/delete/' + poiid + '">delete</a>';
	      deletecell.innerHTML = deletelink;

	  }

	  
      }
  };



  function lookupUserDisplayName(poiitem, jsondata)
  {
      return lookupRelationship(poiitem, jsondata, "user", "displayname");
  }

  function lookupRelationship(poiitem, jsondata, relname, attrname=null)
  {
      var relid = poiitem["relationships"][relname]["data"]["id"];
      var flt = jsondata["included"].filter( x=> x["id"] == relid);
      if(flt.length > 1)
	  throw "logic error: multiple duplicate relationships found";
      if(attrname != null)
	  return flt[0]["attributes"][attrname];
      else
	  return flt[0]["attributes"];
  }      

  function plotpoints(jsondata)
  {
      for(item of jsondata["data"])
      {
	  var attrs = item["attributes"];
	  var txt = attrs["name"];
	  const x = Number(attrs["coords"][0]);
	  const z = Number(attrs["coords"][2]);

	  const update = { x : [[x]],
			   y : [[z]],
			   text : [[txt]]};

	  const style = lookupRelationship(item, jsondata, "style","style");
	  console.log(style);
	  
	  if(attrs["coordtype"] =="OVERWORLD")
	      overworldplot.plotPoint(x,z, txt, style);
	  else if( item["attributes"]["coordtype"] == "NETHER")
	      netherplot.plotPoint(x,z,txt, style);
	  else
	  {
	  }
      };
  };

  
  var ordermap =  new Map();
  
  async function fetch_pois(sortkey=null) {
      options = {method: "GET",
		 headers: {"Accept": "application/vnd.api+json"},
		 credentials: "same-origin"};
      url = new URL("/api/poi", document.URL)
      params = [["page[number]", "1"], ["include", "user,style"],
		["fields[user]", "displayname"],
		["fields[style]", "name,style"]];
      if(sortkey != null)
      {
	  if( !(sortkey  in ordermap))
	  {
	      ordermap[sortkey] = true;
	  }
	  else if(ordermap[sortkey])
	  {
	      ordermap[sortkey] = false;
	      sortkey = "-" + sortkey;
	  }
	  else
	  {
	      ordermap[sortkey] = true;
	  }
	   params.push(["sort", String(sortkey)]);
      }
      url.search = new URLSearchParams(params).toString();

      netherplot.clearPlot();
      overworldplot.clearPlot();


      clearPOItable();
      for(;;)
      {
	  const response = await fetch(url, options);
	  const rjson = await response.json();
	  fillPOItable(rjson);
	  plotpoints(rjson);

	  if(rjson["links"]["next"] == null)
	      break;

	
	  url = rjson["links"]["next"];
      }   
  }

  
</script>


<h1> Minecraft Points of Interest </h1>

<h2>POI map</h2>
<div class="columns">
  <div class="poigraph">
    <div id="poi-overworldgraph"></div></div>
  <div class="poigraph">
    <div id="poi-nethergraph"></div>
  </div>
</div>

<script>
  overworlddom = document.getElementById("poi-overworldgraph");
  netherdom = document.getElementById("poi-nethergraph");

  const netherplot = new PlotlyCoordMapRenderer("The Nether", "50%", netherdom);
  const overworldplot = new PlotlyCoordMapRenderer("Overworld", "50%", overworlddom);
</script>

{% if current_user.is_authenticated %}
  <h2>Add new POI</h2>
  <form method="post" class="poiform">
  {{ form.csrf_token }}
  {{ form.name.label }} {{ form.name }}
  {{ form.x.label }} {{ form.x(class_="coordnum") }}
  {{ form.y.label }} {{ form.y(class_="coordnum") }}
{{ form.z.label }} {{ form.z(class_="coordnum") }}
{{form.coordtp.label}} {{form.coordtp}}
  {{ form.public.label }} {{ form.public }}
  <input type="submit">
  </form>
{% endif %}


<h2> List of POIs </h2>

<div id="current_user_id" hidden>{{current_user.userid}}</div>

<table class="poi_list" id="list_of_pois">
  <th onclick="fetch_pois('name')">Name</th>
  <th onclick="fetch_pois('coord_x')">X</th>
  <th onclick="fetch_pois('coord_y')">Y</th>
  <th onclick="fetch_pois('coord_z')">Z</th>
  <th onclick="fetch_pois('coordtype')">type</th>
  <th onclick="fetch_pois('style.name')">style name </th>
  <th>style preview</th>
  <th onclick="fetch_pois('user.displayname')">created by</th>
  <th onclick="fetch_pois('create_date')">created at</th>
</table>

<script>
  fetch_pois("name");
</script>


{% endblock %}
