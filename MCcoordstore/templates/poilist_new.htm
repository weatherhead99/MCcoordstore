{% extends "base.htm" %}


{% block content %}

<h1> Minecraft Points of Interest </h1>

<h2> Add new POI </h2>
{% if current_user.is_authenticated %}
  <h2>Add new POI</h2>
  <form method="post" class="poiform">
  {{ form.csrf_token }}
  {{ form.name.label }} {{ form.name }}
  {{ form.x.label }} {{ form.x(class_="coordnum") }}
  {{ form.y.label }} {{ form.y(class_="coordnum") }}
{{ form.z.label }} {{ form.z(class_="coordnum") }}
{{form.coordtp.label}} {{form.coordtp}}
  {{ form.public.label }} {{ form.public }}
  <input type="submit">
  </form>
{% endif %}


<h2> List of POIs </h2>

<div id="current_user_id" hidden>{{current_user.userid}}</div>

<table class="poi_list" id="list_of_pois">
  <th onclick="fetch_pois('name')">Name</th>
  <th onclick="fetch_pois('coord_x')">X</th>
  <th onclick="fetch_pois('coord_y')">Y</th>
  <th onclick="fetch_pois('coord_z')">Z</th>
  <th onclick="fetch_pois('coordtype')">type</th>
  <th onclick="fetch_pois('user.displayname')">created by</th>
  <th onclick="fetch_pois('create_date')">created at</th>
</table>

<script>
  function clearPOItable() {
      var rows = document.getElementsByClassName("poi_row");
      console.log(rows.length);
      while(rows.length > 0)
	  rows[0].remove();
  };  

  function fillPOItable(jsondata) {
      var table = document.getElementById("list_of_pois");
      var myuserid = document.getElementById("current_user_id").innerHTML;
      for(item of jsondata["data"])
      {
	  
	  var row = table.insertRow(-1);
	  row.className = "poi_row";
	  var namecell = row.insertCell(-1);
	  namecell.innerHTML = item["attributes"]["name"];

	  var xcell = row.insertCell(-1);
	  xcell.innerHTML = item["attributes"]["coords"][0];

	  var ycell = row.insertCell(-1);
	  ycell.innerHTML = item["attributes"]["coords"][1];

	  var zcell = row.insertCell(-1);
	  zcell.innerHTML = item["attributes"]["coords"][2];

	  //TODO: do this lookup on client side, probably
	  var typecell = row.insertCell(-1);
	  typecell.innerHTML = item["attributes"]["typename"];

	  var usercell = row.insertCell(-1);
	  var userid = item["relationships"]["user"]["data"]["id"];
	  var userdisplayres = jsondata["included"].filter(x => x["id"] ==
							   userid);
	  if(userdisplayres.length > 1)
	      throw "logic error: duplicate user display results";

	 
	  var userdisplay = userdisplayres[0]["attributes"]["displayname"];
	  
	  usercell.innerHTML = userdisplay;

	  var datecell = row.insertCell(-1);
	  var createdat = new Date(item["attributes"]["create_date"].trim());
	  datecell.innerHTML = createdat.toLocaleString();

	  if(Number(userid) == Number(myuserid))
	  {
	      var deletecell = row.insertCell(-1);
	      var poiid = item["id"]
	      var deletelink ='<a href="/poi/delete/' + poiid + '">delete</a>';
	      console.log(deletelink);
	      deletecell.innerHTML = deletelink;

	  }

	  
      }
  };
  
  var ordermap =  new Map();

  async function fetch_pois(sortkey=null) {
      options = {method: "GET",
		 headers: {"Accept": "application/vnd.api+json"},
		 credentials: "same-origin"};
      url = new URL("/api/poi", document.URL)
      params = [["page[number]", "1"], ["include", "user"],
		["fields[user]", "displayname"]];
      if(sortkey != null)
      {
	  if( ! (sortkey  in ordermap))
	  {
	      ordermap[sortkey] = true;
	  }
	  else if(ordermap[sortkey])
	  {
	      ordermap[sortkey] = false;
	      sortkey = "-" + sortkey;
	  }
	  else
	  {
	      ordermap[sortkey] = true;
	  }
	   params.push(["sort", String(sortkey)]);
      }
      url.search = new URLSearchParams(params).toString();

      clearPOItable();

      for(;;)
      {
	  const response = await fetch(url, options);
	  const rjson = await response.json();
	  if(rjson["links"]["next"] == null)
	      break;
	  fillPOItable(rjson);
	  url = rjson["links"]["next"];
      }   
  }

  fetch_pois("name");
  
</script>



{% endblock %}
