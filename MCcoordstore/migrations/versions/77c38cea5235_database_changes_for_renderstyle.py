"""database changes for renderstyle

Revision ID: 77c38cea5235
Revises: efcbaee33642
Create Date: 2021-12-27 19:00:54.558994

"""
from alembic import op
import sqlalchemy as sa
from MCcoordstore.db import User, RenderStyle, DEFAULT_STYLE, PointOfInterest
from sqlalchemy.orm import Session


# revision identifiers, used by Alembic.
revision = '77c38cea5235'
down_revision = 'efcbaee33642'
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    with op.batch_alter_table('pointofinterest', schema=None) as batch_op:
        batch_op.add_column(sa.Column('styleid', sa.Integer(), nullable=True))
        #batch_op.drop_constraint(None, type_='foreignkey')
        batch_op.create_foreign_key(batch_op.f('fk_pointofinterest_styleid_renderstyle'), 'renderstyle', ['styleid'], ['styleid'])
        batch_op.drop_column('style')

    with op.batch_alter_table('renderstyle', schema=None) as batch_op:
        batch_op.add_column(sa.Column('userid', sa.Integer(), nullable=True))
        batch_op.add_column(sa.Column('styleversion', sa.Integer(), nullable=False, server_default="1"))
        batch_op.add_column(sa.Column('is_removable', sa.Boolean(), nullable=True))
        batch_op.create_foreign_key(batch_op.f('fk_renderstyle_userid_user'), 'user', ['userid'], ['userid'])


    
    with op.batch_alter_table('user', schema=None) as batch_op:
        batch_op.add_column(sa.Column('default_styleid', sa.Integer(), nullable=True))
        batch_op.create_foreign_key(batch_op.f('fk_user_default_styleid_renderstyle'), 'renderstyle', ['default_styleid'], ['styleid'], use_alter=True)

    # ### end Alembic commands ###
    stmt = sa.select(User).where(User.username == "admin")
    conn = op.get_bind()
    session = Session(bind=conn)

    print("creating new default style object belonging to admin")
    admin_user = session.execute(stmt).scalars().one()
    default_style = RenderStyle(name="default", style=DEFAULT_STYLE,
                                user=admin_user, is_removable=False)
    session.add(default_style)
    session.commit()

    stmt = sa.select(User)
    results = session.execute(stmt)

    print("adding default style to all users")
    for usr in results.scalars():
        usr.default_style = default_style
    session.commit()

    print("updating all points of interest to use default style")
    stmt = sa.select(PointOfInterest)
    results = session.execute(stmt)

    for poi in results.scalars():
        poi.style = default_style
    session.commit()


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    with op.batch_alter_table('user', schema=None) as batch_op:
        batch_op.drop_constraint(batch_op.f('fk_user_default_styleid_renderstyle'), type_='foreignkey')
        batch_op.drop_column('default_styleid')

    with op.batch_alter_table('renderstyle', schema=None) as batch_op:
        batch_op.drop_constraint(batch_op.f('fk_renderstyle_userid_user'), type_='foreignkey')
        batch_op.drop_column('is_removable')
        batch_op.drop_column('styleversion')
        batch_op.drop_column('userid')

    with op.batch_alter_table('pointofinterest', schema=None) as batch_op:
        batch_op.add_column(sa.Column('style', sa.INTEGER(), nullable=True))
        batch_op.drop_constraint(batch_op.f('fk_pointofinterest_styleid_renderstyle'), type_='foreignkey')
        batch_op.create_foreign_key(None, 'renderstyle', ['style'], ['styleid'])
        batch_op.drop_column('styleid')

    # ### end Alembic commands ###
