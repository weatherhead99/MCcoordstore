"""add tags, coord types and alternate user id

Revision ID: efcbaee33642
Revises: 9b97ad4846ac
Create Date: 2021-12-13 20:21:46.934030

"""
from alembic import op
import sqlalchemy as sa
from MCcoordstore.db import User
from sqlalchemy.orm import Session

# revision identifiers, used by Alembic.
revision = 'efcbaee33642'
down_revision = '9b97ad4846ac'
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('tag',
    sa.Column('tagid', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(), nullable=False),
    sa.Column('create_date', sa.DateTime(timezone=True), nullable=False),
    sa.Column('userid', sa.Integer(), nullable=False),
    sa.Column('style', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['style'], ['renderstyle.styleid'], name=op.f('fk_tag_style_renderstyle')),
    sa.ForeignKeyConstraint(['userid'], ['user.userid'], name=op.f('fk_tag_userid_user')),
    sa.PrimaryKeyConstraint('tagid', name=op.f('pk_tag'))
    )
    op.create_table('poi_tag_association',
    sa.Column('poi_id', sa.Integer(), nullable=False),
    sa.Column('tag_id', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['poi_id'], ['pointofinterest.poiid'], name=op.f('fk_poi_tag_association_poi_id_pointofinterest')),
    sa.ForeignKeyConstraint(['tag_id'], ['tag.tagid'], name=op.f('fk_poi_tag_association_tag_id_tag')),
    sa.PrimaryKeyConstraint('poi_id', 'tag_id', name=op.f('pk_poi_tag_association'))
    )
    with op.batch_alter_table('pointofinterest', schema=None) as batch_op:
        batch_op.add_column(sa.Column('coordtype', sa.Enum('1', '2', '3', '0', name='coordtype'), nullable=True,
                                      server_default='1'))

    with op.batch_alter_table('user', schema=None) as batch_op:
        batch_op.add_column(sa.Column('alternate_id', sa.Integer(), nullable=True))

    with op.batch_alter_table('user', schema=None) as batch_op:
        conn = op.get_bind()
        session = Session(bind=conn)
        for item in session.query(User):
            item.alternate_id = User.random_unique_alternateid()
            print("alternate id: %s" % item.alternate_id)
        session.commit()
        
        batch_op.create_unique_constraint(batch_op.f('uq_user_alternate_id'), ['alternate_id'])

        batch_op.alter_column(column_name="alternate_id", nullable=False)
        
        batch_op.create_unique_constraint(batch_op.f('uq_user_displayname'), ['displayname'])
        batch_op.create_unique_constraint(batch_op.f('uq_user_username'), ['username'])

    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    with op.batch_alter_table('user', schema=None) as batch_op:
        batch_op.drop_constraint(batch_op.f('uq_user_username'), type_='unique')
        batch_op.drop_constraint(batch_op.f('uq_user_displayname'), type_='unique')
        batch_op.drop_constraint(batch_op.f('uq_user_alternate_id'), type_='unique')
        batch_op.drop_column('alternate_id')

    with op.batch_alter_table('pointofinterest', schema=None) as batch_op:
        batch_op.drop_column('coordtype')

    op.drop_table('poi_tag_association')
    op.drop_table('tag')
    # ### end Alembic commands ###
